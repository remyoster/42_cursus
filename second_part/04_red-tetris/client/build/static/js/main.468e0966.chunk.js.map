{"version":3,"sources":["img/keyboard/z.svg","img/keyboard/spacebar.svg","img/keyboard/cursor-up.svg","img/keyboard/cursor-down.svg","img/keyboard/cursor-left.svg","img/keyboard/cursor-right.svg","reducers/gameReducer.js","actions/board.js","utils/tetrimino.js","utils/board.js","utils/scoring.js","reducers/boardReducer.js","reducers/chatReducer.js","constant/eventConstant.js","middleware/socketMiddleware.js","store/configStore.js","actions/socket.js","components/Loader.js","components/NestedMarksList.js","components/Menu.js","components/FormForName.js","pages/Home.js","components/TransitionModal.js","components/TransitionModalGameOver.js","utils/display.js","components/ChatRoom.js","img/keyboard/index.js","components/Board.js","components/DataSlideSnackbar.js","components/OptionsForm.js","components/GameHeader.js","components/StartButton.js","pages/Game.js","utils/hashUrl.js","pages/NotFound.js","pages/App.js","index.js"],"names":["module","exports","initialState","gameAvailable","type","players","room","playerName","id","isLoading","options","ghostMode","fullSpectrum","colorMode","startingLevel","dropTimeRef","error","marks","solo","multi","moveTetri","tetri","board","updateGhost","ghostShape","offsetPiece","shape","offset","x","y","map","e","rotatePoint","M","O","clockwise","xM","yM","offsetDispatcher","oldPos","newPos","letter","other_offset","dispatcher","oldOffset","newOffset","toggleRotationOffset","key","rot","dir","pos","newShape","center","find","rotateTetri","isBoardFillable","fillBoard","color","oldShape","points","i","filter","findIndex","f","occuped","ghost","forEach","checkAndPopCompleteLine","full","tmpBoard","yMax","Math","max","fullLine","push","length","ecart","arr","ecartIdx","idx","nbLines","lines","Array","from","v","k","findEcartInArray","includes","addPenaltyLinesToBoard","penaltyLines","updateScore","prev","downMove","totalLine","line","level","hardDrop","softDrop","lineCleared","score","scoreDispatcher","hard","soft","nextTetri","spectrums","startCounter","locked","isOver","result","messages","store","EVENT_CLIENT_LISTENER","EVENT_CLIENT_EMIT","socket","authPersistConfig","storage","whitelist","reducer","combineReducers","game","persistReducer","state","action","payload","name","tetris","first","next","tmpSpectrums","spectrumIndex","spectrum","names","diff","chat","createStore","applyMiddleware","indexOf","emit","persistor","persistStore","requestNewGame","data","requestChangeOption","requestStartGame","requestGameOver","io","on","getState","event","dispatch","Loader","className","CircularProgress","NestedMarksList","items","gameType","useState","open","setOpen","CustomList","aria-labelledby","subheader","Typography","align","variant","toUpperCase","Divider","style","backgroundColor","displayEmptyItems","pseudo","ListItem","button","onClick","tmpOpen","handleClick","ListItemText","primaryTypographyProps","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","CustomListItem","component","gameOptionsToText","withStyles","root","height","width","padding","margin","GameChoice","choseType","Button","startIcon","Person","Group","MultiGameChoice","props","setGameType","gameLoader","setGameLoader","reloadGames","useEffect","timeoutId","setTimeout","clearTimeout","marginRight","alignSelf","joinGame","alignItems","fontWeight","nbPlayers","PeopleAlt","leader","displayGameAvailable","roomName","AddBox","display","verticalAlign","position","justifyContent","size","IconButton","aria-label","Replay","ViewQuilt","Visibility","Stars","Timer","CustomFab","ArrowBack","Object","entries","value","theme","flexDirection","bottom","left","Fab","Menu","useStyles","makeStyles","PseudoTextField","palette","main","borderColor","fill","TextField","FormForName","classes","setName","handleSubmit","preventDefault","requestConnect","noValidate","onSubmit","autoComplete","onChange","target","label","helperText","InputProps","endAdornment","InputAdornment","autoFocus","connect","to","displayDisconnectHeader","displayForms","modal","body","textAlign","TransitionModal","Modal","disableBackdropClick","TransitionModalGameOver","isLeader","restartSameGame","backToOptions","winner","displayMultiWinner","displayEndActions","displayGridSpectrum","boardArray","keys","cell","yMin","searchFirstOccupedLine","regex","RegExp","test","ChatTextField","setChat","moment","date","format","displayMessages","multiline","onKeyDown","shiftKey","z","require","spacebar","cursorUp","cursorDown","cursorLeft","cursorRight","text","paused","setPaused","dropTime","useRef","t0","Date","now","lock","lastKey","intervalId","setInterval","clearInterval","current","init","coords_x","xMax","frames","gravityDispatcher","listenKey","document","keyCode","dropedLines","toggleHardDrop","toggleSimpleOffset","addEventListener","removeEventListener","toggleGhost","dispatchEvent","KeyboardEvent","requestNewPiece","updateSpectrum","src","keyboardIcon","alt","displaySpectrums","toString","parseInt","tet","displayNextTetri","opacity","displayBoard","padStart","displayCounterModal","DataSlideSnackbar","direction","severity","closeSnack","reason","Snackbar","TransitionComponent","Slide","autoHideDuration","onClose","elevation","CustomSwitcher","option","FormGroup","row","CustomFormControlLabel","control","Switch","checked","disabled","labelPlacement","ColorSelect","CustomFormControl","InputLabel","Select","native","labelId","StartingLevelSlider","sliderVal","setSliderVal","gutterBottom","CustomSlider","data-testid","getAriaValueText","valueLabelDisplay","step","min","val","onChangeCommitted","DropTimeRefSlider","markLabel","markLabelActive","Slider","FormControlLabel","secondary","FormControl","refOptions","openSnack","setOpenSnack","GameHeader","displayPlayers","StartButton","setSnackState","snackState","useMemo","findLeader","displaySnackBar","window","location","hash","urlSplit","split","roomUrl","substring","checkHashUrl","hashType","waitingText","displayReady","NotFound","redirectUrl","setredirectUrl","backToGoodUrl","createMuiTheme","light","dark","contrastText","App","loading","ThemeProvider","exact","path","strict","Home","Game","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.468e0966.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/z.21be9c7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/spacebar.f235d5f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-up.078d598d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-down.4df17baf.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-left.a0430e92.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-right.4accab8c.svg\";","\n/*\n** Bonuses : \n** - startingLevel is the starting level of the game\n** - dropTimeRef is the lower value of the gravity (decrease it to\n**   increase difficulties)\n** - fullSpectrum to activate or not the fullspectrum visibility\n** - ghostMode to activate or not the position of the piece on the stack\n*/\n\nexport const initialState = {\n    gameAvailable: [],\n    type: null,\n    players: [],\n    room: null,\n    playerName: null,\n    id: null,\n    isLoading: true,\n    options: {\n        ghostMode: true,\n        fullSpectrum: false,\n        colorMode: 'normal',\n        startingLevel: 0,\n        dropTimeRef: 1000,\n    },\n    error: null,\n    marks: { solo: [], multi: [] },\n};\n\nexport function gameReducer(state = initialState, action) {\n    switch (action.type) {\n        case \"LIST_GAME_SUCCESS\":\n            return {\n                ...state,\n                gameAvailable: action.payload,\n            };\n        case \"CONNECT_SUCCESS\":\n            return ({\n                ...state,\n                playerName: action.payload.name,\n                id: action.payload.id,\n                isLoading: false,\n                error: null\n            });\n        case \"CREATE_GAME_SUCCESS\":\n            return {\n                ...state,\n                type: action.payload.type,\n                players: action.payload.players,\n                room: action.payload.room,\n                options: action.payload.options,\n                isLoading: false,\n            };\n        case \"BEST_GAMES_SUCCESS\":\n            return {\n                ...state,\n                marks: action.payload\n            };\n        case \"JOIN_GAME_SUCCESS\":\n            return {\n                ...state,\n                type: action.payload.type,\n                players: action.payload.players,\n                room: action.payload.room,\n                options: action.payload.options,\n                isLoading: false,\n            };\n        case \"CHANGE_OPTION_SUCCESS\":\n            return ({ ...state, options: action.payload });\n        case \"REQUEST_LEAVE_ROOM\":\n            return ({ \n                ...initialState,\n                playerName: state.playerName,\n                id: state.id,\n                isLoading: false\n            });\n        case \"UPDATE_PLAYERS_SUCCESS\":\n            return {\n                ...state,\n                players: action.payload\n            }\n        case \"EXIT\":\n            return ({...initialState, isLoading: false});\n        case \"ERROR\":\n            return ({ ...state, error: action.payload, isLoading: false });\n        case \"REMOVE_ERROR\":\n            return ({ ...state, error: null });\n        default:\n            return (state);\n    }\n}\n","export function moveTetri({ tetri, board }) {\n\treturn ({ type: \"MOVE_TETRI\", tetri, board });\n}\n\nexport function moveTetriAndLock({ tetri, board, dropedLines }) {\n\treturn ({ type: \"MOVE_TETRI_AND_LOCK\", tetri, board, dropedLines });\n}\n\nexport function updateGhost({ ghostShape, board }) {\n\treturn ({ type: \"UPDATE_GHOST\", ghostShape, board });\n}\n\nexport function updateBoard({ board }) {\n\treturn ({ type: \"UPDATE_BOARD\", board });\n}\n\nexport function lockBoard() {\n\treturn ({ type: \"LOCK\" });\n}\n\nexport function unlockBoard() {\n\treturn ({ type: \"UNLOCK\" });\n}\n\nexport function updateScore(fullLine, downMove) {\n\treturn ({type: \"UPDATE_SCORE\", fullLine, downMove});\n}\n\nexport function updateStartCounter() {\n\treturn ({type : \"UPDATE_START_COUNTER\"});\n}","import { isBoardFillable, fillBoard } from './board';\nimport { moveTetri, moveTetriAndLock, updateGhost } from '../actions/board';\n\n/*\n** Move a shape by the offset coordinates\n*/\n\nexport function offsetPiece(shape, offset) {\n  if (offset.x !== 0 || offset.y !== 0)\n    return (shape.map(e => ({\n      ...e,\n      x: e.x + offset.x,\n      y: e.y + offset.y\n    })));\n  return (shape);\n}\n\n/*\n** Rotate each point of a tetrimino shape by finding his center and passing\n** each point to the rotate_point function\n*/\n\nexport function rotateTetri(shape, clockwise = true) {\n  let center = shape.find(e => e.center);\n  return (shape.map(e => {\n    if (!e.center)\n      return (rotatePoint(e, center, clockwise));\n    return (e);\n  }));\n}\n\n/* \n** Rotate M point on center O by 90 degree following orthonormal coordinate\n** system (x from left to right, y from top to bottom)\n*/\n\nexport function rotatePoint(M, O, clockwise = true) {\n  let xM = M.x - O.x;\n  let yM = M.y - O.y;\n  if (clockwise)\n    return ({ x: -yM + O.x, y: xM + O.y });\n  return ({ x: yM + O.x, y: -xM + O.y });\n}\n\n/*\n** Apply the correct offset to a piece after it's rotation based on the old pos\n** of the piece, the new pos, the letter and the offset test number.\n** Our board is from top to bottom so y values are reverse.\n** https://tetris.wiki/Super_Rotation_System\n*/\n\nexport function offsetDispatcher(oldPos, newPos, letter, offset) {\n  const O_offset = [\n    [{ x: 0, y: 0 }],\n    [{ x: 0, y: 1 }],\n    [{ x: -1, y: 1 }],\n    [{ x: -1, y: 0 }]\n  ];\n  const I_offset = [\n    [{ x: 0, y: 0 }, { x: -1, y: 0 }, { x: 2, y: 0 }, { x: -1, y: 0 }, { x: 2, y: 0 }],\n    [{ x: -1, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: -1 }, { x: 0, y: 2 }],\n    [{ x: -1, y: -1 }, { x: 1, y: -1 }, { x: -2, y: -1 }, { x: 1, y: 0 }, { x: -2, y: 0 }],\n    [{ x: 0, y: -1 }, { x: 0, y: -1 }, { x: 0, y: -1 }, { x: 0, y: 1 }, { x: 0, y: -2 }],\n  ];\n  const other_offset = [\n    [{ x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }],\n    [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 1, y: 1 }, { x: 0, y: -2 }, { x: 1, y: -2 }],\n    [{ x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }, { x: 0, y: 0 }],\n    [{ x: 0, y: 0 }, { x: -1, y: 0 }, { x: -1, y: 1 }, { x: 0, y: -2 }, { x: -1, y: -2 }],\n  ];\n  const dispatcher = { 'I': I_offset, 'O': O_offset };\n  let oldOffset = dispatcher[letter] ? dispatcher[letter][oldPos][offset]\n    || dispatcher[letter][oldPos][0] : other_offset[oldPos][offset];\n  let newOffset = dispatcher[letter] ? dispatcher[letter][newPos][offset]\n    || dispatcher[letter][newPos][0] : other_offset[newPos][offset];\n  return ({ x: oldOffset.x - newOffset.x, y: oldOffset.y - newOffset.y });\n}\n\n/*\n ** Return the action to dispatch when the rotation is done if there is one.\n ** That includes the new shape of the tetri and the new board already filled.\n */\n\nexport function toggleRotationOffset(key, tetri, board) {\n  let rot = key === 38 ? { dir: true, pos: 1 } : { dir: false, pos: -1 };\n  let newShape = rotateTetri(tetri.shape, rot.dir);\n  let pos = tetri.pos + rot.pos;\n  pos = pos > 3 ? 0 : pos < 0 ? 3 : pos;\n  let offset = 0;\n  while (offset < 5) {\n    newShape = offsetPiece(\n      newShape,\n      offsetDispatcher(tetri.pos, pos, tetri.letter, offset)\n    );\n    if (isBoardFillable(board, tetri.shape, newShape))\n      break;\n    offset += 1;\n  }\n  if (offset < 5)\n    return (moveTetri({\n      tetri: { ...tetri, shape: newShape, pos: pos },\n      board: fillBoard(board, tetri.shape, newShape, tetri.color),\n    }));\n  return (null);\n}\n\n/*\n ** Return the action to dispatch after a simple move or null if the move isn't\n ** possible.\n ** That includes the new shape of the tetri and the new board already filled\n */\n\nexport function toggleSimpleOffset(key, tetri, board) {\n  let newShape;\n  if (key === 39)\n    newShape = offsetPiece(tetri.shape, { x: 1, y: 0 });\n  else if (key === 37)\n    newShape = offsetPiece(tetri.shape, { x: -1, y: 0 });\n  else if (key === 40)\n    newShape = offsetPiece(tetri.shape, { x: 0, y: 1 });\n  if (isBoardFillable(board, tetri.shape, newShape))\n    return (moveTetri({\n      tetri: { ...tetri, shape: newShape },\n      board: fillBoard(board, tetri.shape, newShape, tetri.color),\n    }));\n  return (null);\n}\n\n/*\n** Return the action to dispatch after a hard drop.\n** That includes the new shape of the tetri, the new board already filled and\n** the number of lines droped (to scoring purpose)\n*/\n\nexport function toggleHardDrop(tetri, board) {\n  let y = 1;\n  while (\n    isBoardFillable(\n      board,\n      tetri.shape,\n      offsetPiece(tetri.shape, { x: 0, y: y })\n    )\n  )\n    y += 1;\n  let newShape = offsetPiece(tetri.shape, { x: 0, y: y - 1 });\n  return (moveTetriAndLock({\n    tetri: { ...tetri, shape: newShape },\n    board: fillBoard(board, tetri.shape, newShape, tetri.color),\n    dropedLines: y - 1\n  }));\n}\n\n/*\n** Return the action to dispatch after a tetri move.\n** That includes the new shape of the ghost and the new board already filled\n*/\n\nexport function toggleGhost(ghostShape, tetri, board) {\n  let y = 1;\n  while (\n    isBoardFillable(\n      board,\n      tetri.shape,\n      offsetPiece(tetri.shape, { x: 0, y: y })\n    )\n  )\n    y += 1;\n  let newShape = offsetPiece(tetri.shape, { x: 0, y: y - 1 });\n  return (updateGhost({\n    ghostShape: newShape,\n    board: fillBoard(board, ghostShape, newShape, tetri.color, true),\n  }))\n}\n","import { offsetPiece } from './tetrimino';\n/*\n** Boolean function to check if the board is fillable with the new tetri shape.\n*/\n\nexport function isBoardFillable(board, oldShape, newShape) {\n  let points;\n  if (!newShape)\n    return (false);\n  if (oldShape)\n    points = newShape.filter(e =>\n      (oldShape.findIndex(f =>\n        (f.x === e.x && f.y === e.y)) > -1) ? false : true);\n  else\n    points = newShape;\n  for (const i in points) {\n    if (!board[`${points[i].x},${points[i].y}`]\n      || board[`${points[i].x},${points[i].y}`].occuped)\n      return (false);\n  }\n  return (true);\n}\n\n/*\n** Fill the board with the newShape of the tetri and \"delete\" the old one.\n** Then return the newBoard. Does the same with ghostMode for the ghostTetri\n*/\n\nexport function fillBoard(board, oldShape, newShape, color, ghost = false) {\n  if (!ghost) {\n    if (oldShape)\n      oldShape.forEach(e => {\n        board[`${e.x},${e.y}`] = { occuped: false, color: null }\n      });\n    newShape.forEach(e => {\n      board[`${e.x},${e.y}`] = { occuped: true, color: color }\n    });\n  }\n  else {\n    if (oldShape)\n      oldShape.forEach(e => {\n        board[`${e.x},${e.y}`].ghost = false;\n      });\n    newShape.forEach(e => {\n      board[`${e.x},${e.y}`].ghost = true;\n      board[`${e.x},${e.y}`].color = color;\n    });\n  }\n  return (board);\n}\n\n/*\n** Return a object with entries x,y (width, height) based on a 10x axis and\n** inifite y. Each entry receive two props : occuped (boolean) and\n** color (hex val or string)\n*/\n\nexport function createBoard(width, height) {\n  return (Array.from({\n    length: width * height\n  }, (v, k) => k)\n    .reduce((o, key) => ({\n      ...o, [`${key % width},${parseInt(key / width)}`]: {\n        occuped: false,\n        color: null\n      }\n    }), {}));\n}\n\n/*\n** Check the board \"around\" the last tetri droped. If the board has one or more \n** (4 max) line completed, it \"delete\" them by putting the cell state to not\n** occuped. Then it rolls down every cell upper the y-max cleared line by the\n** number of line cleared (or by the ecart if any, with the correct offset). \n** Returns a tmpBoard and the length of full line, if any\n*/\n\nexport function checkAndPopCompleteLine(board, tetri) {\n  let tmpBoard = null;\n  let yMax = Math.max(...tetri.shape.map(e => e.y));\n  let fullLine = [];\n  let full;\n  for (let y = yMax; y >= 0 && yMax - y < 4; y--) {\n    full = 0;\n    for (let x = 0; x < 10; x++) {\n      if (board[`${x},${y}`].occuped)\n        full += 1;\n    }\n    if (full === 10)\n      fullLine.push(y);\n  }\n  if (fullLine.length) {\n    tmpBoard = { ...board };\n    fullLine.forEach(y => {\n      for (let x = 0; x < 10; x++)\n        tmpBoard[`${x},${y}`] = { occuped: false, color: null };\n    });\n    yMax = Math.max(...fullLine) - 1;\n    let ecart = findEcartInArray(fullLine);\n    for (let y = yMax; y >= 0; y--) {\n      if (ecart && ecart.lines.includes(y)) {\n        for (let x = 0; x < 10; x++) {\n          if (tmpBoard[`${x},${y}`].occuped) {\n            tmpBoard[`${x},${y}`].occuped = false;\n            tmpBoard[`${x},${(y + fullLine.length - ecart.offset)}`] = {\n              occuped: true,\n              color: tmpBoard[`${x},${y}`].color\n            };\n          }\n        }\n      }\n      else {\n        for (let x = 0; x < 10; x++) {\n          if (tmpBoard[`${x},${y}`].occuped) {\n            tmpBoard[`${x},${y}`].occuped = false;\n            tmpBoard[`${x},${(y + fullLine.length)}`] = {\n              occuped: true,\n              color: tmpBoard[`${x},${y}`].color\n            };\n          }\n        }\n      }\n    }\n  }\n  return ({ tmpBoard: tmpBoard, fullLine: fullLine.length });\n}\n\n/*\n** Find the first ecart in an array of consecutive number and return an array of\n** each consecutive number in the ecart interval (if any) and an offset of \n** 1 if the ecart interval is 2, else 2.\n** The array must be in reverse order\n*/\n\nexport function findEcartInArray(arr) {\n  let ecart = null;\n  if (arr.length > 1) {\n    let ecartIdx = arr.findIndex((e, idx) => arr[idx + 1] && e - arr[idx + 1] !== 1);\n    if (ecartIdx > -1) {\n      let nbLines = arr[ecartIdx] - arr[ecartIdx + 1];\n      if (ecartIdx === 0)\n        ecart = {\n          lines: Array.from({ length: nbLines }, (v, k) => arr[ecartIdx] - (k + 1)),\n          offset: arr.length === 2 ? 1 : 2\n        }\n      else\n        ecart = { lines: [arr[ecartIdx] - 1], offset: 1 };\n    }\n  }\n  return (ecart);\n}\n\n/*\n** Add penaltyLines into the board. If there is a tetri falling down it moves it\n** from penaltyLines.length upper\n*/\n\nexport function addPenaltyLinesToBoard(board, tetri, penaltyLines) {\n  let tmpBoard = fillBoard(board, tetri.shape, [], tetri.color);\n  for (let y = 0; y < 20; y++) {\n    for (let x = 0; x < 10; x++) {\n      if (tmpBoard[`${x},${y}`].occuped) {\n        tmpBoard[`${x},${y}`].occuped = false;\n        tmpBoard[`${x},${(y - penaltyLines.length)}`] = {\n          occuped: true,\n          color: tmpBoard[`${x},${y}`].color\n        };\n      }\n    }\n  }\n  for (let y = 20 - penaltyLines.length; y < 20; y++) {\n    for (let x = 0; x < 10; x++) {\n      if (x !== penaltyLines[19 - y])\n        tmpBoard[`${x},${y}`] = { occuped: true, color: 'firebrick' };\n    }\n  }\n  let idx = 0;\n  let newShape;\n  while (idx < 4) {\n    newShape = offsetPiece(tetri.shape, { x: 0, y: -idx });\n    if (isBoardFillable(tmpBoard, null, newShape))\n      break;\n    idx++;\n  }\n  tmpBoard = fillBoard(tmpBoard, null, newShape, tetri.color);\n  return ({ tmpBoard, newShape });\n}\n","\n/*\n** Display the level with format 00\n*/\n\nexport function displayScoreLevel(level) {\n  return (level < 10 ? '0' + level : level.toString());\n}\n\n/*\n** Display the line score with format 000\n*/\n\nexport function displayScoreLine(line) {\n  return (line < 10 ? '00' + line : line < 100 ? '0' + line : line.toString());\n}\n\n/*\n** Display the total score with format 000000\n*/\n\nexport function displayScorePoints(points) {\n  return (points.toString().padStart(6, '0'));\n}\n\n/*\n** Original Nintendo scoring system + hard and soft drop bonuses\n** https://tetris.wiki/Scoring#Original_Nintendo_scoring_system\n*/\n\nexport function scoreDispatcher(level, hardDrop, softDrop, lineCleared) {\n  const scoreRef = [40, 100, 300, 1200];\n  let score = 0;\n  if (lineCleared)\n    score += scoreRef[lineCleared - 1] * (level + 1);\n  score += softDrop + hardDrop * 2;\n  return (score);\n}\n\n/*\n** Return the new score state. It calculates points when the tetri hit the stack\n** by calling scoreDispatcher. Then if the tetri break some lines it add it \n** to the total lines counter. Level can be inscreased if total line passed a 10\n*/\n\nexport function updateScore(prev, fullLine, downMove) {\n  let totalLine = prev.line + fullLine;\n  let points = scoreDispatcher(\n    prev.level,\n    downMove.hard,\n    downMove.soft,\n    fullLine\n  );\n  if (fullLine && (prev.line % 10) + fullLine >= 10)\n    return ({\n      points: prev.points + points,\n      line: totalLine,\n      level: prev.level + 1,\n    });\n  else\n    return ({ ...prev, points: prev.points + points, line: totalLine });\n}\n","import { addPenaltyLinesToBoard } from '../utils/board';\nimport { updateScore } from '../utils/scoring';\n\n/*\n** Initial board state. Tetri and next tetri represents tetriminos. Board is a\n** object of coordinates, locked is a boolean to know if the piece attempt the\n** stack.\n*/\n\nexport const initialState = {\n    tetri: null,\n    nextTetri: null,\n    ghostShape: null,\n    board: null,\n    spectrums: [],\n    score: {\n        line: 0,\n        points: 0,\n        level: 0,\n    },\n    penaltyLines: 0,\n    startCounter: 3,\n    locked: true,\n    isOver: false,\n    result: null,\n};\n\n/*\n** Reducer to deal with piece reception and board animation\n*/\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case \"START_GAME_SUCCESS\":\n            return {\n                ...state,\n                tetri: action.payload.tetris.first,\n                nextTetri: action.payload.tetris.next,\n                spectrums: action.payload.spectrums,\n                board: action.payload.board,\n                score: {\n                    ...initialState.score,\n                    level: action.payload.startingLevel\n                },\n                penaltyLines: 0,\n                startCounter: 3,\n                ghostShape: null,\n                isOver: false,\n                result: null\n            };\n        case \"NEW_PIECE_SUCCESS\":\n            return ({\n                ...state,\n                tetri: state.nextTetri,\n                nextTetri: action.payload,\n                locked: false\n            });\n        case \"MOVE_TETRI\":\n            return ({ ...state, tetri: action.tetri, board: action.board });\n        case \"MOVE_TETRI_AND_LOCK\":\n            return ({\n                ...state,\n                tetri: action.tetri,\n                board: action.board,\n                locked: true,\n            });\n        case \"UPDATE_BOARD\":\n            return ({ ...state, board: action.board });\n        case \"UPDATE_SCORE\":\n            return ({\n                ...state,\n                score: updateScore(state.score, action.fullLine, action.downMove)\n            });\n        case \"UPDATE_START_COUNTER\":\n            return ({ ...state, startCounter: state.startCounter - 1 });\n        case \"ADD_PENALTY_LINES_SUCCESS\":\n            if (state.isOver)\n                return (state);\n            let { tmpBoard, newShape } = addPenaltyLinesToBoard(state.board,\n                state.tetri, action.payload);\n            return ({\n                ...state,\n                board: tmpBoard,\n                tetri: { ...state.tetri, shape: newShape },\n                penaltyLines: state.penaltyLines + action.payload.length,\n                locked: false\n            });\n        case \"UPDATE_SPECTRUM_SUCCESS\":\n            let tmpSpectrums = [...state.spectrums];\n            const spectrumIndex = tmpSpectrums\n                .findIndex(e => e.playerName === action.payload.playerName);\n            if (spectrumIndex > -1)\n                tmpSpectrums[spectrumIndex].spectrum = action.payload.spectrum;\n            return ({ ...state, spectrums: tmpSpectrums });\n        case \"UPDATE_GHOST\":\n            return ({\n                ...state,\n                ghostShape: action.ghostShape,\n                board: action.board\n            });\n        case \"UPDATE_PLAYERS_SUCCESS\":\n            if (state.spectrums.length) {\n                let names = action.payload.map(e => e.name);\n                let diff = state.spectrums.filter(e => names.includes(e.playerName));\n                return ({...state, spectrums: diff});\n            }\n            else\n                return (state);\n        case \"LOCK\":\n            return { ...state, locked: true };\n        case \"UNLOCK\":\n            return ({ ...state, locked: false });\n        case \"RESET_GAME_SUCCESS\":\n            return (initialState);\n        case \"REQUEST_GAME_OVER\":\n            return ({ ...state, isOver: true, locked: true });\n        case \"YOU_WIN\":\n            return ({ ...state, isOver: true });\n        case \"WIN_GAME_SUCCESS\":\n            return ({\n                ...state,\n                result: action.payload\n            });\n        case \"REQUEST_LEAVE_ROOM\":\n            return (initialState);\n        case \"EXIT\":\n            return (initialState);\n        default:\n            return (state);\n    }\n}","export const initialState = {\n\tmessages: []\n};\n\nexport function chatReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase \"CHAT_MESSAGE_SUCCESS\":\n\t\t\treturn ({...state, messages: [action.payload, ...state.messages]});\n\t\tcase \"JOIN_GAME_SUCCESS\":\n\t\t\treturn (initialState);\n\t\tcase \"REQUEST_LEAVE_ROOM\":\n\t\t\treturn (initialState);\n\t\tdefault:\n\t\t\treturn (state);\n\t}\n}","export const EVENT_CLIENT_LISTENER = [\n  \"LIST_GAME_SUCCESS\",\n  \"CONNECT_SUCCESS\",\n  \"CREATE_GAME_SUCCESS\",\n  \"JOIN_GAME_SUCCESS\",\n  \"CHANGE_OPTION_SUCCESS\",\n  \"START_GAME_SUCCESS\",\n  \"LEAVE_ROOM_SUCCESS\",\n  \"NEW_PIECE_SUCCESS\",\n  \"UPDATE_SPECTRUM_SUCCESS\",\n  \"ADD_PENALTY_LINES_SUCCESS\",\n  \"ERROR\",\n  \"STOP_GAME_SUCCESS\",\n  \"RESET_GAME_SUCCESS\",\n  \"EXIT\",\n  \"UPDATE_PLAYERS_SUCCESS\",\n  \"GAME_OVER_SUCCESS\",\n  \"CHAT_MESSAGE_SUCCESS\",\n  \"YOU_WIN\",\n  \"WIN_GAME_SUCCESS\",\n  \"BEST_GAMES_SUCCESS\"\n];\nexport const EVENT_CLIENT_EMIT = [\n  \"REQUEST_LIST_GAME\",\n  \"REQUEST_CONNECT\",\n  \"REQUEST_NEW_GAME\",\n  \"REQUEST_JOIN_GAME\",\n  \"REQUEST_CHANGE_OPTION\",\n  \"REQUEST_START_GAME\",\n  \"REQUEST_LEAVE_ROOM\",\n  \"REQUEST_QUIT_GAME\",\n  \"REQUEST_NEW_PIECE\",\n  \"UPDATE_SPECTRUM\",\n  \"ADD_PENALTY_LINES\",\n  \"REQUEST_CHECK_RELOAD\",\n  \"REQUEST_GAME_OVER\",\n  \"REQUEST_CHAT_MESSAGE\",\n  \"REQUEST_DISCONNECT\",\n  \"REQUEST_BACK_TO_OPTION\",\n  \"REQUEST_BEST_GAMES\"\n];","import {\n  EVENT_CLIENT_LISTENER,\n  EVENT_CLIENT_EMIT,\n} from \"../constant/eventConstant\";\nimport io from \"socket.io-client\";\nlet socket = null;\n\nexport const wsMiddleware = (store) => {\n  return (next) => (action) => {\n    if (socket) {\n      if (action.type && EVENT_CLIENT_EMIT.indexOf(action.type) !== -1) {\n        socket.emit(action.type, action.payload);\n      }\n    }\n    return next(action);\n  };\n}\n\n/*\n** Socket setup, it connects with serv and if there was a ID/name it sends it\n** when the connection is established (to deal with reload and deconnection)\n*/\n\nexport const startWs = (store) => {\n  if (!socket) {\n    socket = io('http://localhost:3001/game');//PROD local et DEV \n    //socket = io(\"https://red-tetris-game.herokuapp.com/game\");//PROD heroku\n    socket.on('connect', () => {\n      let state = store.getState();\n      socket.emit(\"REQUEST_CHECK_RELOAD\", state.game.id);\n    });\n    EVENT_CLIENT_LISTENER.forEach((event) => {\n      socket.on(event, (payload) => {\n        return store.dispatch({ type: event, payload });\n      });\n    });\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { gameReducer } from '../reducers/gameReducer';\nimport { boardReducer } from '../reducers/boardReducer';\nimport { chatReducer } from '../reducers/chatReducer';\nimport { startWs, wsMiddleware } from '../middleware/socketMiddleware';\n\nconst authPersistConfig = {\n  key: \"redTetris-auth\",\n  storage: storage,\n  whitelist: ['id', 'playerName']\n}\n\nconst reducer = combineReducers({\n  game: persistReducer(authPersistConfig, gameReducer),\n  board: boardReducer,\n  chat: chatReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(wsMiddleware),\n);\nconst persistor = persistStore(store);\nstartWs(store);\n\nexport { persistor, store };\n","export function requestListGame() {\n  return { type: \"REQUEST_LIST_GAME\" };\n}\n\nexport function requestConnect(name) {\n  return ({ type: \"REQUEST_CONNECT\", payload: name });\n}\n\nexport function requestNewGame(data) {\n  return { type: \"REQUEST_NEW_GAME\", payload: data };\n}\n\nexport function requestJoinGame(data) {\n  return { type: \"REQUEST_JOIN_GAME\", payload: data };\n}\n\nexport function requestChangeOption(data) {\n  return ({ type: \"REQUEST_CHANGE_OPTION\", payload: data })\n}\n\nexport function requestStartGame(data) {\n  return { type: \"REQUEST_START_GAME\", payload: data };\n}\n\nexport function requestLeaveRoom() {\n  return { type: \"REQUEST_LEAVE_ROOM\" };\n}\n\nexport function requestNewPiece(data) {\n  return { type: \"REQUEST_NEW_PIECE\", payload: data };\n}\n\nexport function updateSpectrum(data) {\n  return { type: \"UPDATE_SPECTRUM\", payload: data };\n}\n\nexport function addPenaltyLines(data) {\n  return { type: \"ADD_PENALTY_LINES\", payload: data };\n}\n\nexport function actionError(data) {\n  return { type: \"ERROR\", payload: data };\n}\n\nexport function removeError() {\n  return { type: \"REMOVE_ERROR\" };\n}\n\nexport function requestCheckReload(data) {\n  return { type: \"REQUEST_CHECK_RELOAD\", payload: data };\n}\n\nexport function requestDisconnect() {\n  return { type: \"REQUEST_DISCONNECT\" }\n}\n\nexport function requestGameOver(data) {\n  return ({ type: \"REQUEST_GAME_OVER\", payload: data });\n}\n\nexport function requestBackToOption() {\n  return ({ type: \"REQUEST_BACK_TO_OPTION\" });\n}\n\nexport function requestQuitGame() {\n  return ({ type: \"REQUEST_QUIT_GAME\"});\n}\n\nexport function requestChatMessage(data) {\n  return ({ type: \"REQUEST_CHAT_MESSAGE\", payload: data });\n}\n\nexport function requestBestGames() {\n  return ({ type: \"REQUEST_BEST_GAMES\" });\n}","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Loader() {\n    return (\n        <div className='loader-component flex-container'>\n            <CircularProgress color=\"secondary\" />\n        </div>\n    );\n}\n\nexport default Loader;","import React, { useState } from 'react';\nimport {\n  List, ListItem, ListItemText, Collapse,\n  Typography, Divider\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\nimport { gameOptionsToText } from './Menu';\n\n/*\n** Display a nested list from best scores\n*/\n\nexport default function NestedMarksList({ items, gameType }) {\n  const [open, setOpen] = useState({});\n\n  /*\n  ** Create an object with each entry === one element\n  */\n\n  function handleClick(idx) {\n    let tmpOpen = { ...open };\n    tmpOpen[idx] = tmpOpen[idx] ? !tmpOpen[idx] : true;\n    setOpen(tmpOpen);\n  };\n\n  /*\n  ** If there are no marks yey\n  */\n\n  function displayEmptyItems() {\n    if (items.length === 0)\n      return (\n        <div className='margin-10'>\n          <Typography variant='body1'>\n            No best scores yet\n        </Typography>\n        </div>\n      );\n  }\n\n  return (\n    <CustomList\n      className=\"retro-border\"\n      aria-labelledby={\"nested-list-subheader-\" + gameType}\n      subheader={\n        <div>\n          <Typography align=\"center\" variant='h6'>\n            {gameType.toUpperCase()}\n          </Typography>\n          <Divider style={{ backgroundColor: 'white' }} />\n        </div>\n      }\n    >\n      {displayEmptyItems()}\n      {items.map((e, idx) =>\n        <div key={e.pseudo + idx}>\n          <ListItem button onClick={() => handleClick(idx)}>\n            <ListItemText primaryTypographyProps={{ variant: 'h6' }}\n              primary={`${idx + 1}. ${e.pseudo} - ${e.score.points}`} />\n            {open[idx] ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          {open[idx] && <Collapse in timeout=\"auto\" unmountOnExit>\n            <List disablePadding>\n              <CustomListItem>\n                <Typography variant='body1' component='p'>\n                  Level : {e.score.level} - Line: {e.score.line}\n                </Typography>\n              </CustomListItem>\n              <CustomListItem>\n                <div className='game-available-options'>\n                  {gameOptionsToText(e.options)}\n                </div>\n              </CustomListItem>\n            </List>\n          </Collapse>}\n        </div>\n      )}\n    </CustomList>\n  );\n}\n\nconst CustomList = withStyles({\n  root: {\n    color: 'white',\n    height: 'fit-content',\n    width: '250px',\n  },\n})(List);\n\n\nconst CustomListItem = withStyles({\n  root: {\n    padding: '0 0 0 16px',\n    margin: 0,\n    backgroundColor: 'rgba(213, 0, 0, 0.39)',\n  }\n})(ListItem);","import React, { useState, useEffect } from \"react\";\nimport {\n    requestNewGame, requestJoinGame, requestListGame,\n    requestBestGames\n} from \"../actions/socket\";\nimport {\n    Typography, Button, ListItem, Divider, Fab,\n    CircularProgress, IconButton\n} from \"@material-ui/core\";\nimport {\n    Group, Person, ArrowBack, AddBox, Replay, ViewQuilt, Visibility, Timer,\n    Stars, PeopleAlt\n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport Loader from './Loader';\nimport NestedMarksList from './NestedMarksList';\n\n/*\n** Display  menu choices : gameType menu then if multi gameChoice menu\n*/\n\nfunction Menu(props) {\n    const { gameAvailable, dispatch, marks } = props;\n    const [gameType, setGameType] = useState(false);\n\n    /*\n    ** If gametype is multi it updates the game's list every 5 seconds\n    ** ig gameType is solo it starts a new game\n    */\n\n    useEffect(() => {\n        if (!gameType) {\n            dispatch(requestBestGames());\n        }\n        else if (gameType && gameType === 'solo')\n            dispatch(requestNewGame(gameType));\n    }, [gameType, dispatch])\n\n    /*\n    ** toggle the gameType changes. If it's multi it dispatch a request to\n    ** update the game's list\n    */\n\n    function choseType(type) {\n        if (type === 'multi')\n            dispatch(requestListGame());\n        setGameType(type);\n    }\n\n    function displayGameChoice() {\n        if (!gameType) {\n            return (<GameChoice choseType={choseType} marks={marks} />);\n        }\n        else if (gameType === 'multi')\n            return (\n                <MultiGameChoice gameAvailable={gameAvailable}\n                    dispatch={dispatch} setGameType={setGameType}\n                />\n            );\n        else\n            return (<Loader />)\n    }\n\n    return (\n        <div className='menu-container'>\n            {displayGameChoice()}\n        </div>\n    );\n}\n\n/*\n** Display and toggle the game choice between solo and multi\n*/\n\nexport function GameChoice({ choseType, marks }) {\n    return (\n        <>\n            <div className='game-type-container dark-backGround retro-border'>\n                <Typography variant='h3' component='h3'>\n                    Select your game type\n                    </Typography>\n                <div className='buttons-container'>\n                    <Button variant=\"contained\" color=\"primary\"\n                        onClick={() => choseType(\"solo\")}\n                        startIcon={<Person />}>\n                        SOLO\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\"\n                        onClick={() => choseType(\"multi\")}\n                        startIcon={<Group />}>\n                        MULTIPLAYER\n                    </Button>\n                </div>\n            </div>\n            <div className='dark-backGround retro-border game-type-container'>\n                <Typography variant='h4'>Best scores</Typography>\n                <Divider style={{ backgroundColor: 'white', margin: '10px 0' }} />\n                <div className=\"best-scores-container\">\n                    <NestedMarksList items={marks.solo} gameType=\"solo\" />\n                    <NestedMarksList items={marks.multi} gameType=\"multi\" />\n                </div>\n            </div>\n        </>\n    );\n}\n\n/*\n** Display and toggle the list of the game in multi and possibility to join or\n** create one.\n*/\n\nexport function MultiGameChoice(props) {\n    const { gameAvailable, dispatch, setGameType } = props;\n    const [gameLoader, setGameLoader] = useState(false);\n\n    useEffect(() => {\n        let timeoutId = setTimeout(() => setGameLoader(false), 1000);\n        return (() => {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n        })\n    }, [gameAvailable])\n\n    function joinGame(roomName) {\n        dispatch(requestJoinGame(roomName));\n    }\n\n    function newGameMulti() {\n        dispatch(requestNewGame('multi'));\n    }\n\n    function reloadGames() {\n        setGameLoader(true);\n        dispatch(requestListGame());\n    }\n\n    function displayReload() {\n        if (gameLoader)\n            return (\n                <div style={{padding: '12px', display: 'inline-flex',\n                    verticalAlign: 'middle', position: 'relative',\n                    alignItems:'center', justifyContent:'center'}}>\n                    <CircularProgress color=\"secondary\" size={20} />\n                </div>\n            );\n        return (\n            <IconButton aria-label='reload' color='secondary'\n                onClick={reloadGames}>\n                <Replay />\n            </IconButton>\n        );\n    }\n\n    return (\n        <div className='multi-choice-container'>\n            <div style={{ width: '70%', marginRight: '20px' }}\n                className='retro-border dark-backGround'>\n                <Typography variant='h4' component='h4' align='center'>\n                    Room choice\n                </Typography>\n                <Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n                {displayGameAvailable(gameAvailable, joinGame)}\n                <Button style={{ margin: '10px' }} color=\"primary\"\n                    variant=\"contained\"\n                    onClick={newGameMulti}\n                    startIcon={<AddBox />}>\n                    New\n                </Button>\n                {displayReload()}\n            </div>\n            <div style={{ height: 'fit-content' }}\n                className='retro-border dark-backGround'>\n                {displayLegends()}\n            </div>\n            <CustomFab color=\"primary\" variant=\"extended\" aria-label=\"back\"\n                onClick={() => setGameType(false)} >\n                <ArrowBack /> Back\n            </CustomFab>\n        </div>\n    );\n}\n\n/*\n** Display all available games with possibility to join them\n*/\n\nexport function displayGameAvailable(gameAvailable, joinGame) {\n    return (\n        <div className='game-available-container'>\n            {gameAvailable.length ? gameAvailable.map(game => (\n                <CustomListItem key={game.name} button\n                    onClick={() => joinGame(game.name)}>\n                    <div style={{ alignItems: 'center' }} className='flex-container'>\n                        <Typography fontWeight=\"bold\" variant='h6' component='span'>\n                            {game.name} [{game.nbPlayers}/5]\n                    </Typography>\n                        <PeopleAlt style={{ margin: '0 5px' }} />\n                        <Typography variant='body1'>{game.leader}</Typography>\n                    </div>\n                    <div className='game-available-options'>\n                        {gameOptionsToText(game.options)}\n                    </div>\n                </CustomListItem>\n            )) : <Typography align='center' variant='h6' component='p'>\n                    There are no room already created : go create one !\n                    </Typography>\n            }\n        </div>\n    )\n\n}\n\n/*\n** Display in a div container each legend with a icon\n*/\n\nexport function displayLegends() {\n    return (\n        <div className='options-legend-container'>\n            <Typography variant='h4' component='h4'>Legends</Typography>\n            <Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n            <div className='option-value'>\n                <PeopleAlt /> = Leader\n            </div>\n            <div className='option-value'>\n                <ViewQuilt /> = Ghost mode\n            </div>\n            <div className='option-value'>\n                <Visibility /> = Full spectrum mode\n            </div>\n            <div className='option-value'>\n                <Stars /> = Starting level\n            </div>\n            <div className='option-value'>\n                <Timer /> = Gravity (time in ms)\n            </div>\n        </div>\n    );\n}\n\n/*\n** Transform the options object into a div container with each option with it\n** value and a icon\n*/\n\nexport function gameOptionsToText(options) {\n    function optionsDispatcher(name, value) {\n        if (name === 'ghostMode')\n            return (<><ViewQuilt /> {(value ? 'On' : 'Off')}</>);\n        else if (name === 'fullSpectrum')\n            return (<><Visibility /> {(value ? 'On' : 'Off')}</>);\n        else if (name === 'startingLevel')\n            return (<><Stars /> {value}</>);\n        else if (name === 'dropTimeRef')\n            return (<><Timer /> {value}</>);\n    }\n\n    let optionsArray = Object.entries(options);\n    return (\n        optionsArray.map((e) =>\n            <div key={e[0]} className='option-value'>\n                {optionsDispatcher(e[0], e[1])}\n            </div>\n        )\n    );\n}\n\nconst CustomListItem = withStyles((theme) => ({\n    root: {\n        alignItems: 'unset',\n        justifyContent: 'unset',\n        flexDirection: 'column',\n        '&:hover': {\n            backgroundColor: 'rgba(213, 0, 0, 0.39)',\n        }\n    }\n}))(ListItem);\n\nconst CustomFab = withStyles({\n    root: {\n        position: 'absolute',\n        bottom: '20px',\n        left: '20px',\n    }\n})(Fab);\n\nexport default Menu;\n","import React, { useState } from \"react\";\nimport { requestConnect } from \"../actions/socket\";\nimport {\n    Button, InputAdornment, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '6px 30px',\n        margin: '20px 0 0 0',\n    },\n});\n\n/*\n** Display the form to connect to the site. It toggles a dispatch if name.length\n** is valid. Then if there is no error the serv send a socket.\n*/\n\nfunction FormForName(props) {\n    const { error, dispatch } = props;\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name.length)\n            dispatch(requestConnect(name));\n    }\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    return (\n        <div className='formforname-container dark-backGround retro-border'>\n            <Typography variant='h3' component='h1' className='margin-10'>\n                Welcome on Red Tetris !\n            </Typography>\n            <Typography variant='h4' component='h3' className='margin-10'>\n                Fill your playername :\n            </Typography>\n            <form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n                <PseudoTextField\n                    type='text'\n                    error={error ? true : false}\n                    value={name}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                    label=\"Pseudo\"\n                    helperText={error}\n                    InputProps={error ? {\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <ErrorIcon />\n                            </InputAdornment>\n                        ),\n                    } : {}}\n                    autoFocus\n                />\n                <Button className={classes.root}\n                    onClick={handleSubmit} variant='contained' color='primary'\n                    startIcon={<VideogameAssetIcon />}>\n                    Enter\n          </Button>\n            </form>\n        </div>\n    );\n}\n\nconst PseudoTextField = withStyles((theme) => ({\n    root: {\n        '& .MuiInputBase-input': {\n            color: 'white'\n        },\n        '& .MuiFormLabel-root': {\n            color: 'grey'\n        },\n        '& .MuiFormLabel-root.Mui-focused': {\n            color: theme.palette.primary.main\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'white',\n            },\n            '&:hover fieldset': {\n                borderColor: theme.palette.primary.main,\n            },\n        },\n        '& .MuiInputAdornment-root > .MuiSvgIcon-root': {\n            fill: 'red'\n        }\n    },\n}))(TextField);\n\nexport default FormForName;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { requestDisconnect } from \"../actions/socket\";\nimport Menu from \"../components/Menu\";\nimport FormForName from \"../components/FormForName\";\nimport Loader from \"../components/Loader\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nfunction Home(props) {\n  const { room, playerName, gameAvailable, isLoading, error, dispatch,\n    marks } = props;\n\n\n  /*\n  ** Display the forms in function of playerName and room\n  */\n\n  function displayForms(room, playerName) {\n    if (!playerName)\n      return (<FormForName error={error} dispatch={dispatch} />);\n    if (!room)\n      return (<Menu dispatch={dispatch} gameAvailable={gameAvailable}\n        marks={marks} />);\n  }\n\n  /*\n  ** Display the disconnect header button\n  */\n\n  function displayDisconnectHeader(playerName, dispatch) {\n    if (playerName)\n      return (\n        <div className='disconnect-header'>\n          <Fab\n            color=\"primary\"\n            variant=\"extended\"\n            onClick={() => dispatch(requestDisconnect())}\n          >\n            {playerName} <ExitToAppIcon />\n          </Fab>\n        </div>\n      );\n  }\n\n  if (isLoading)\n    return (<Loader />);\n  else if (room && playerName)//UTILE ? \n    return (<Redirect to={`${room}[${playerName}]`} />);\n  else\n    return (\n      <div className=\"home-page\">\n        {displayDisconnectHeader(playerName, dispatch)}\n        <div className=\"home-form-container\">\n          {displayForms(room, playerName)}\n          {isLoading && <Loader />}\n        </div>\n      </div>\n    );\n\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    isLoading: state.game.isLoading,\n    room: state.game.room,\n    playerName: state.game.playerName,\n    gameAvailable: state.game.gameAvailable,\n    error: state.game.error,\n    marks: state.game.marks,\n  };\n}\n\nexport default connect(mapStatetoProps)(Home);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nconst useStyles = makeStyles({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n\t},\n\tbody: {\n\t\tcolor: 'white',\n\t\twidth: 200,\n\t\ttextAlign: 'center'\n\t}\n});\n\nexport default function TransitionModal({ data }) {\n\tconst classes = useStyles();\n\tconst body = (\n\t\t<div className={classes.body}>\n\t\t\t<h2>{data}</h2>\n\t\t</div>\n\t\t);\n\n  return (\n      <Modal\n        className={classes.modal}\n        open={true}\n\t\t\t\tdisableBackdropClick\n      >\n\t\t\t\t{body}\n      </Modal>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Button, Typography } from '@material-ui/core';\nimport {\n    requestStartGame, requestBackToOption, requestLeaveRoom\n} from \"../actions/socket\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    body: {\n        color: 'white',\n        textAlign: 'center',\n        backgroundColor: 'black',\n        padding: '30px'\n    },\n    button: {\n        margin: '10px'\n    }\n});\n\n/*\n** Display the gameOver modal at the end of the game. Then toggles restart game,\n** display winner (if multi) and go back to options\n*/\n\nexport default function TransitionModalGameOver(props) {\n    const classes = useStyles();\n    const { score, result, isLeader, gameType, nbPlayers, room,\n        dispatch } = props;\n\n    function restartSameGame() {\n        dispatch(requestStartGame(room));\n    }\n    function backToOptions() {\n        dispatch(requestBackToOption());\n    }\n    function leaveRoom() {\n        dispatch(requestLeaveRoom());\n    }\n    function displayMultiWinner(gameType, result) {\n        if (gameType === 'multi' && result)\n            return (\n                <div className='winner-scoring'>\n                    <Typography component='p'>\n                        Winner : {result.winner}\n                    </Typography>\n                    <Typography component='p'>\n                        Points : {result.points} / Level : {result.level} / Line : {result.line}\n                    </Typography>\n                </div>\n            );\n    }\n\n    function displayEndActions(gameType, isLeader, result) {\n        if (gameType === 'solo' || (isLeader && result))\n            return (\n                <>\n                    {(gameType === 'solo' || nbPlayers > 1) &&\n                        <Button className={classes.button}\n                            onClick={restartSameGame}\n                            variant=\"contained\" color=\"primary\"\n                            startIcon={<ReplayIcon />}>\n                            Restart\n                    </Button>}\n                    <Button\n                        onClick={backToOptions}\n                        variant=\"contained\" color=\"primary\"\n                        startIcon={<ArrowBack />}>\n                        Back to options\n                    </Button>\n                </>\n            );\n        else if (!result) {\n            return (\n                <Typography component='p'>\n                    Wait for the end of game\n                </Typography>\n            );\n        }\n        else\n            return (\n                <Typography component='p'>\n                    Wait the leader's choice\n                </Typography>\n            );\n    }\n\n    return (\n        <Modal\n            className={classes.modal}\n            open={true}\n            disableBackdropClick\n        >\n            <div className={classes.body}>\n                <Typography variant='h2' component='h2'>Game Over</Typography>\n                <div className='personnal-scoring'>\n                    <Typography variant='body1' component='p'>\n                        Points: {score.points}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                        Level : {score.level}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                        Lines : {score.line}\n                    </Typography>\n                </div>\n                {displayMultiWinner(gameType, result)}\n                <div className='end-actions-container flex-container'>\n                    {displayEndActions(gameType, isLeader, result)}\n                    <Button className={classes.button}\n                        onClick={leaveRoom} variant='contained' color='primary'\n                        startIcon={<ExitToAppIcon />}>\n                        Quit\n          </Button>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport TransitionModal from '../components/TransitionModal';\nimport Loader from '../components/Loader';\nimport TransitionModalGameOver from '../components/TransitionModalGameOver';\n\n/*\n** display a transitionModal with startCounter\n*/\n\nexport function displayCounterModal(startCounter) {\n  if (startCounter) {\n    return (<TransitionModal data={startCounter} />);\n  }\n}\n\n/*\n** Display a transitionModal with game over and score of the player\n*/\n\nexport function displayGameOverModal(data) {\n  return (<TransitionModalGameOver {...data} />);\n}\n\n/*\n** Display the board by transforming the board object into an array of\n** Paper (if cell is occuped) or simple div if cell is empty\n*/\n\nexport function displayBoard(board) {\n  const boardArray = Object.keys(board);\n  return (boardArray.map((e) => {\n    if (board[e].occuped)\n      return (\n        <div\n          key={e}\n          className=\"tetri-cell\"\n          style={{\n            backgroundColor: board[e].color,\n            borderColor: board[e].color\n          }}\n        />\n      );\n    else if (board[e].ghost)\n      return (\n        <div\n          key={e}\n          className=\"tetri-cell\"\n          style={{\n            backgroundColor: board[e].color, opacity: 0.33,\n            borderColor: board[e].color\n          }}\n        />\n      );\n    else\n      return (<div key={e}></div>);\n  }));\n}\n\n/*\n** Display spectrum with the player's board\n*/\n\nexport function displayGridSpectrum(board, full = false) {\n  const boardArray = Object.keys(board);\n  if (full)\n    return (boardArray.map((cell) => {\n      if (board[cell].occuped)\n        return (\n          <div\n            key={`${cell}-spectrum`}\n            className=\"tetri-cell\"\n            style={{ backgroundColor: board[cell].color,\n              borderColor: board[cell].color }}\n          />\n        );\n      return (<div key={`${cell}-spectrum`} />);\n    }));\n  const yMin = searchFirstOccupedLine(board);\n  const regex = new RegExp(`,${yMin}$`);\n  return (boardArray.map((cell) => {\n    if (regex.test(cell))\n      return (\n        <div\n          key={`${cell}-spectrum`}\n          className='tetri-cell'\n          style={{ backgroundColor: 'firebrick', borderColor: 'firebrick' }}\n        />\n      );\n    return (<div key={`${cell}-spectrum`} />);\n  }))\n}\n\n/*\n** Search the first cell occuped in the board and return the y coordinate\n*/\n\nexport function searchFirstOccupedLine(board) {\n  let y = 19;\n  let x = 0;\n  while (y >= 0) {\n    x = 0;\n    while (x < 10) {\n      if (board[`${x},${y}`].occuped)\n        break;\n      x++;\n    }\n    if (x === 10)\n      return (y + 1);\n    y--;\n  }\n  return (null);\n}\n\n/*\n** Display each spectrum in a multiplayer game\n*/\n\nexport function displaySpectrums(spectrums, full = false) {\n  if (spectrums[0])\n    return (\n      <div className='spectrums-container'>\n        {spectrums.map((spectrum, idx) => (\n          <div key={`${spectrum}-${idx}`} className='spectrum-board'>\n            <div className=\"spectrum-name retro-border\">\n              {spectrum.playerName}\n              </div>\n            <div className=\"spectrum-grid retro-border\">\n              {displayGridSpectrum(spectrum.spectrum, full)}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n}\n\n/*\n ** Display the next playable tetri by parsing nextTetri and filling\n ** a 4*6 grid with some div(if the point is empty) or paper cell (if the point\n ** corresponding)\n */\n\nexport function displayNextTetri(nextTetri) {\n  if (nextTetri) {\n    let coord_idx;\n    return (\n      Array.from({ length: 8 }, (v, k) => {\n        return { x: k % 4, y: parseInt(k / 4) }\n      }).map(e => {\n        coord_idx = nextTetri.shape.find(tet => tet.x === e.x && tet.y === e.y);\n        if (coord_idx)\n          return (\n            <div\n              className='tetri-cell'\n              key={`nextTetri-cell-${e.x},${e.y}`}\n              style={{ backgroundColor: nextTetri.color,\n                borderColor: nextTetri.color }}\n            />\n          );\n        return (<div key={`nextTetri-cell-${e.x},${e.y}`} />);\n      }));\n  }\n}\n\nexport function displayLoader(isLoading) {\n  if (isLoading)\n    return (<Loader />);\n}\n","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { TextField, Typography, Divider } from '@material-ui/core';\nimport { requestChatMessage } from '../actions/socket';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\n/*\n** Display and deal the chat when there is a multi game\n*/\n\nfunction ChatRoom(props) {\n\tconst { messages, dispatch, playerName, room } = props;\n\tconst [chat, setChat] = useState('');\n\n\tfunction handleChange(e) {\n\t\tsetChat(e.target.value);\n\t}\n\n\t/*\n\t** Prevent default enter key in textarea to directly send the message\n\t*/\n\n\tfunction listenKey(e) {\n\t\tif (e.key === 'Enter' && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tif (chat.length) {\n\t\t\t\tdispatch(requestChatMessage({ chat, room, playerName }));\n\t\t\t\tsetChat('');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='chatroom-container'>\n\t\t\t<Typography variant='h4' component='h4'>Chat</Typography>\n\t\t\t<Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n\t\t\t<div className='chatroom-messages-container'>\n\t\t\t\t{displayMessages(messages, playerName)}\n\t\t\t</div>\n\t\t\t<div className='chat-input'>\n\t\t\t\t<ChatTextField\n\t\t\t\t\tid=\"standard-multiline-flexible\"\n\t\t\t\t\tlabel=\"Chat\"\n\t\t\t\t\tmultiline\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={chat}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonKeyDown={listenKey}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/*\n** Display a div container with className right-chat or left-chat if the player\n** is the sender and apply a different style on it. It displays the playername,\n** the content of the message and the date of sending\n*/\n\nexport function displayMessages(messages, playerName) {\n\treturn (messages.map((e, idx) =>\n\t\t<div\n\t\t\tclassName={e.playerName === playerName ? 'right-chat' : 'left-chat'}\n\t\t\tkey={'chat-' + idx}\n\t\t>\n\t\t\t{e.playerName !== playerName &&\n\t\t\t\t<Typography variant='subtitle1' component='p'>\n\t\t\t\t\t\t<span className='boldText'>{e.playerName}</span>\n\t\t\t\t</Typography>\n\t\t\t}\n\t\t\t<span className='chat-content'>\n\t\t\t\t<Typography variant='body1' component='span'>\n\t\t\t\t\t{e.chat}\n\t\t\t\t</Typography>\n\t\t\t</span>\n\t\t\t<Typography variant='caption' component='p'>\n\t\t\t\t{moment(e.date).format('HH:mm')}\n\t\t\t</Typography>\n\t\t</div>\n\t));\n}\n\nconst ChatTextField = withStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& .MuiInputBase-input': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'& .MuiFormLabel-root': {\n\t\t\tcolor: 'grey'\n\t\t},\n\t\t'& .MuiFormLabel-root.Mui-focused': {\n\t\t\tcolor: theme.palette.primary.main\n\t\t},\n\t\t'& .MuiOutlinedInput-root': {\n\t\t\t'& fieldset': {\n\t\t\t\tborderColor: 'white',\n\t\t\t},\n\t\t\t'&:hover fieldset': {\n\t\t\t\tborderColor: theme.palette.primary.main,\n\t\t\t},\n\t\t},\n\t},\n}))(TextField);\n\nconst mapStateToProps = (state) => {\n\treturn ({\n\t\tmessages: state.chat.messages,\n\t\tplayerName: state.game.playerName,\n\t\troom: state.game.room\n\t});\n};\n\nexport default connect(mapStateToProps)(ChatRoom);","export const z = require('./z.svg');\nexport const spacebar = require('./spacebar.svg');\nexport const cursorUp = require('./cursor-up.svg');\nexport const cursorDown = require('./cursor-down.svg');\nexport const cursorLeft = require('./cursor-left.svg');\nexport const cursorRight = require('./cursor-right.svg');","import React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, Button, List, ListItem, ListItemText, Divider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport {\n  offsetPiece, toggleRotationOffset, toggleHardDrop, toggleSimpleOffset,\n  toggleGhost\n} from \"../utils/tetrimino\";\nimport {\n  isBoardFillable, fillBoard, checkAndPopCompleteLine\n} from \"../utils/board\";\nimport {\n  displayCounterModal, displayGameOverModal, displayBoard,\n  displaySpectrums, displayNextTetri\n} from '../utils/display';\nimport {\n  displayScoreLevel, displayScoreLine, displayScorePoints,\n} from \"../utils/scoring\";\nimport {\n  requestNewPiece, updateSpectrum,\n  addPenaltyLines, requestGameOver, requestLeaveRoom\n} from \"../actions/socket\";\nimport {\n  moveTetri, lockBoard, unlockBoard, updateBoard, updateScore, updateStartCounter,\n  updateGhost\n} from \"../actions/board\";\nimport ChatRoom from './ChatRoom';\nimport * as keyboardIcon from '../img/keyboard';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n/*\n** Board component is the playable game. It creates the board (obj of coordinates)\n** display it, get tetrimino from the serv via socket and display them on\n** the previous grid and on the board. Then it's tetris with SRS,\n** wall-kicks, hard-drop, counter clockwise rotation.\n** dropTime is the gravity moment, t0 the time where the gravity moment is\n** applied, lock a boolean to lock the tetri, downMove is a counter of soft and\n** hard drop (for score) and lastKey is the lastKey press if lock is on.\n** StartCounter toggle the pre-start moment\n*/\n\nfunction Board(props) {\n  const { tetri, nextTetri, board, room, playerName, isLeader, gameType, locked,\n    spectrums, options, ghostShape, dispatch, isOver, result, score,\n    startCounter, nbPlayers } = props;\n  const [paused, setPaused] = useState({ text: \"PAUSE\", state: false });\n  const dropTime = useRef(options.dropTimeRef);\n  const t0 = useRef(Date.now());\n  const lock = useRef(false);\n  const downMove = useRef({ soft: 0, hard: 0 });\n  const lastKey = useRef(null);\n\n  /*\n  ** Start the game with the startCounter interval by unlocking it\n  */\n\n  useEffect(() => {\n    let intervalId = null;\n    if (startCounter > 0) {\n      intervalId = setInterval(() => {\n        dispatch(updateStartCounter())\n      }, 1000);\n    }\n    if (startCounter === 0) {\n      dispatch(unlockBoard());\n    }\n    return (() => {\n      if (intervalId)\n        clearInterval(intervalId);\n    });\n  }, [startCounter, dispatch]);\n\n  /*\n  ** Unlock the tetrimino whenever it changes (avoid weird behavior when\n  ** moving a piece manually + gravity move)\n  */\n\n  useEffect(() => {\n    if (!locked)\n      lock.current = false;\n  }, [locked, dispatch, board, tetri]);\n\n  /*\n  ** Center the tetri when it pops on the board and reset downMove counter.\n  ** If there is no space to place it, the game is over !\n  */\n\n  useEffect(() => {\n    if (tetri && !tetri.init && !locked) {\n      let coords_x = tetri.shape.map((e) => e.x);\n      let xMax = Math.max(...coords_x) === 1 ? 1 : 0;\n      let newShape = offsetPiece(tetri.shape, { x: 3 + xMax, y: 0 });\n      if (isBoardFillable(board, null, newShape)) {\n        let tmpBoard = fillBoard(board, null, newShape, tetri.color);\n        lock.current = true;\n        lastKey.current = null;\n        downMove.current = { soft: 0, hard: 0 };\n        dispatch(moveTetri({\n          tetri: { ...tetri, shape: newShape, init: true },\n          board: tmpBoard,\n        }));\n      } else {\n        dispatch(requestGameOver(score));\n      }\n    }\n  }, [tetri, locked, board, dispatch, score]);\n\n  /*\n  ** Toggle the gravity during the  It move the piece from 1y down at the\n  ** dropTime timeout and actualize the moment it does it (t0).\n  ** If it can't move the piece it locks the  It reset the dropTime at\n  ** the frame rate of the current level.\n  */\n\n  useEffect(() => {\n    function gravity() {\n      if (tetri && tetri.init && !locked && !lock.current) {\n        let newShape = offsetPiece(tetri.shape, { x: 0, y: 1 });\n        if (isBoardFillable(board, tetri.shape, newShape)) {\n          lock.current = true;\n          let tmpBoard = fillBoard(board, tetri.shape, newShape, tetri.color);\n          dispatch(moveTetri({\n            tetri: { ...tetri, shape: newShape },\n            board: tmpBoard,\n          }));\n          t0.current = Date.now();\n        }\n        else {\n          dispatch(lockBoard());\n          lock.current = true;\n        }\n        dropTime.current = gravityDispatcher(options.dropTimeRef, score.level);\n      }\n    }\n    let intervalId = setTimeout(gravity, dropTime.current);\n    return () => {\n      clearTimeout(intervalId);\n    };\n  }, [score.level, paused, tetri, locked, board, options.dropTimeRef, dispatch]);\n\n  /*\n  ** Key event function. If the key move the tetri, the lock ref is set to true\n  ** to avoid weird behavior when waiting for component rerender. If a key is\n  ** pressed during the gravity moment, the lastKey ref is set to fire the event\n  ** when gravity is done.\n  ** Also if the board change, it calculates the time spended since the previous\n  ** gravity moment (=dropTime) and actualize it.\n  ** Key codes (ubuntu qwerty americain US):\n  ** 38 = up arrow / 39 = right arrow / 37 = left arrow / 40 = down arrow\n  ** 90 = z / 32 = space bar\n  */\n\n  useEffect(() => {\n    function listenKey(e) {\n      if (e.target === document.body && tetri && tetri.init && !locked\n        && !lock.current) {\n        let action;\n        let key = e.keyCode;\n        //console.log(key);\n        if (key === 38 || key === 90) {\n          action = toggleRotationOffset(key, tetri, board);\n        }\n        else if (key === 32) {\n          action = toggleHardDrop(tetri, board);\n          downMove.current.hard = action.dropedLines || 0;\n        }\n        else {\n          action = toggleSimpleOffset(key, tetri, board);\n          downMove.current.soft += action && key === 40 ? 1 : 0;\n        }\n        if (!action && key === 40) {\n          action = { type: \"LOCK\" };\n        }\n        if (action) {\n          dispatch(action);\n          dropTime.current -= Date.now() - t0.current;\n          lock.current = action.type ? true : false;\n        }\n      }\n      else if (lock.current)\n        lastKey.current = e.keyCode;\n    }\n    document.body.addEventListener(\"keyup\", listenKey);\n    return () => {\n      document.body.removeEventListener(\"keyup\", listenKey);\n    };\n  }, [tetri, locked, board, dispatch]);\n\n\n  /*\n  ** Update ghost based on tetri's moves\n  */\n\n  useEffect(() => {\n    if (options.ghostMode && tetri && tetri.init) {\n      let action = toggleGhost(ghostShape, tetri, board);\n      let diffs = action.ghostShape.filter(e =>\n        ((ghostShape || []).findIndex(f =>\n          (f.x === e.x && f.y === e.y)) > -1) ? false : true);\n      if (diffs.length)\n        dispatch(updateGhost(action));\n    }\n  }, [tetri, board, ghostShape, options.ghostMode, dispatch])\n\n  /*\n   ** Fire the keyboard event if lastKey is set (cf listenKey function) and\n   ** reset it to null\n   */\n\n  useEffect(() => {\n    if (lastKey.current && tetri.init && !locked) {\n      document.body.dispatchEvent(\n        new KeyboardEvent(\"keyup\", { keyCode: lastKey.current })\n      );\n      lastKey.current = null;\n    }\n  }, [tetri, locked]);\n\n  /*\n   ** Toggle the complete line effect. Whenever a tetri can't move anymore the\n   ** game will be locked and this event is fired. It toggle the board with\n   ** the checkAndPopCompleteLine function and actualize the score and level if\n   ** needed. Then it requests a new piece and update spectrums if multi\n   */\n\n  useEffect(() => {\n    if (locked && lock.current) {\n      let { tmpBoard, fullLine } = checkAndPopCompleteLine(board, tetri);\n      if (tmpBoard) {\n        dispatch(updateBoard({ board: tmpBoard }));\n        let penaltyLines = fullLine - 1;\n        if (gameType === 'multi' && penaltyLines > 0)\n          dispatch(addPenaltyLines({ room, penaltyLines }));\n      }\n      else {\n        dispatch(requestNewPiece({ room, playerName }));\n        if (gameType === 'multi')\n          dispatch(updateSpectrum({ room, board, playerName }));\n      }\n      dispatch(updateScore(fullLine, downMove.current));\n    }\n  }, [playerName, room, gameType, locked, board, dispatch, tetri]);\n\n  /*\n  ** To stop the game when you're the last player : you win !\n  */\n\n  useEffect(() => {\n    if (gameType === 'multi' && isOver && !locked) {\n      dispatch(requestGameOver(score));\n    }\n  }, [isOver, locked, dispatch, score, gameType])\n\n  /*\n   ** Put the in \"pause\" by setting lock ref to true. Or unpause the game\n   ** by setting lock ref to false and reseting lastKey ref\n   */\n\n  function pauseGame() {\n    if (paused.state) {\n      lock.current = false;\n      lastKey.current = null;\n      setPaused({ text: \"PAUSE\", state: false });\n    } else {\n      lock.current = true;\n      setPaused({ text: \"RESUME\", state: true });\n    }\n  }\n\n  function quitGame() {\n    dispatch(requestLeaveRoom());\n  }\n\n  return (\n    <div className=\"game-container\">\n\n      <div className=\"flex-column-container left-game-container\">\n\n        <div className=\"dark-backGround retro-border\">\n          <Typography align='center' variant=\"h5\" component='h5'>\n            Controls :\n          </Typography>\n          <Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n          <List>\n            <ListItem>\n              <img src={keyboardIcon.cursorUp} className='keyboard-icon' alt='up key' />\n              <ListItemText primary='clockwise rotation' />\n            </ListItem>\n            <ListItem><img src={keyboardIcon.z} className='keyboard-icon' alt='z key' />\n              <ListItemText primary='counter clockwise rotation' />\n            </ListItem>\n            <ListItem>\n              <img src={keyboardIcon.cursorLeft} className='keyboard-icon' alt='left key' />\n              <img src={keyboardIcon.cursorRight} className='keyboard-icon' alt='right key' />\n              <img src={keyboardIcon.cursorDown} className='keyboard-icon' alt='down key' />\n              <ListItemText primary='move' />\n            </ListItem>\n            <ListItem>\n              <img src={keyboardIcon.spacebar} className='keyboard-icon-large' alt='spacebar' />\n              <ListItemText primary='fall towards the pile' />\n            </ListItem>\n          </List>\n        </div>\n\n        <div className='buttons-container'>\n          {gameType === 'solo' && <><Button onClick={pauseGame} variant=\"contained\" color=\"primary\"\n            startIcon={paused.state ? <PlayArrowIcon /> : <PauseIcon />}>\n            {paused.text}\n          </Button></>}\n          <Button onClick={quitGame} variant='contained' color='primary'\n            startIcon={<ExitToAppIcon />}>\n            Quit\n          </Button>\n        </div>\n\n        {gameType === 'multi' && displaySpectrums(spectrums, options.fullSpectrum)}\n\n      </div>\n\n      <div className=\"board center-game-container\">\n\n        <div className=\"flex-container upper-board-container retro-border\">\n\n          <div className=\"line-counter-container\">\n            <Typography variant=\"h5\">Line</Typography>\n            <Typography variant=\"h5\">{displayScoreLine(score.line)}</Typography>\n          </div>\n\n          <div className=\"next-tetri-container flex-container\">\n            <div className=\"align-self-center\">\n              <Typography variant=\"h5\">NEXT</Typography>\n            </div>\n            <div className='center-container'>\n              <div className=\"tetrimino-container\">\n                {displayNextTetri(nextTetri)}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div className=\"board-container retro-border\">\n          {displayBoard(board)}\n        </div>\n\n      </div>\n\n      <div className='right-game-container'>\n\n        <div className=\"score-container retro-border\">\n          <Typography variant=\"h5\">Score</Typography>\n          <Typography variant=\"h5\">{displayScorePoints(score.points)}</Typography>\n        </div>\n\n        <div className=\"score-container retro-border\">\n          <Typography variant=\"h5\">Level</Typography>\n          <Typography variant=\"h5\">{displayScoreLevel(score.level)}</Typography>\n        </div>\n\n      </div>\n      {gameType === 'multi' &&\n        <div className='retro-border dark-backGround board-chatroom'>\n          <ChatRoom />\n        </div>}\n      {displayCounterModal(startCounter)}\n      {isOver && displayGameOverModal({score, result, isLeader, gameType,\n        dispatch, nbPlayers, room\n      })}\n    </div >\n  );\n}\n\n/*\n ** Return the current dropTime of the level. Based on NES release it applies a\n ** cross product on the frame rate table (frames) and our dropTimeRef (1s)\n */\n\nexport function gravityDispatcher(dropTimeRef, level) {\n  const frames = [\n    48, 43, 38, 33, 28, 23, 18, 13, 8, 6, 5, 5, 5, 4, 4, 4, 3, 3,\n    3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  ];\n  return (((frames[level] || 1) * dropTimeRef) / frames[0]);\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    board: state.board.board,\n    tetri: state.board.tetri,\n    ghostShape: state.board.ghostShape,\n    nextTetri: state.board.nextTetri,\n    spectrums: state.board.spectrums,\n    locked: state.board.locked,\n    score: state.board.score,\n    startCounter: state.board.startCounter,\n    options: state.game.options,\n    room: state.game.room,\n    playerName: state.game.playerName,\n    gameType: state.game.type,\n    isOver: state.board.isOver,\n    result: state.board.result,\n  };\n}\n\nexport default connect(mapStatetoProps)(Board);\n","import React from 'react';\nimport { Slide, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n/*\n** Display a snackbar with a slide transition.\n** - data : innerText of the snackbar\n** - direction : animation direction (up,down,left,right)\n** - severity : color of the snack (see material ui)\n** - open, setOpen : boolean + function to modify it\n*/\n\nfunction DataSlideSnackbar({ data, direction, severity, open, setOpen }) {\n\n\t/*\n\t** Close the snackbar\n\t*/\n\n\tfunction closeSnack(e, reason) {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t}\n\n/*\n** Create a slide animation from the bottom (avoid findDomNode error)\n*/\n\tfunction SlideTransition(props){\n\t\treturn (<Slide {...props} direction={direction ? direction : \"up\"} />);\n\t}\n\n\treturn (\n\t\t\t<Snackbar TransitionComponent={SlideTransition} open={open}\n\t\t\t\tautoHideDuration={3000} onClose={closeSnack}>\n\t\t\t\t<MuiAlert elevation={6} variant=\"filled\"\n\t\t\t\t\tonClose={closeSnack} severity={severity ? severity : \"info\"}>\n\t\t\t\t\t\t{data}\n\t\t\t\t\t</MuiAlert>\n\t\t\t</Snackbar>\n\t);\n}\n\nexport default DataSlideSnackbar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tTypography, Slider, FormGroup, FormControlLabel, Switch, Divider, FormControl,\n\tSelect, InputLabel\n} from '@material-ui/core';\nimport { requestChangeOption } from '../actions/socket';\nimport { withStyles } from '@material-ui/core/styles';\nimport DataSlideSnackbar from './DataSlideSnackbar';\n\n\n/*\n** OptionsForm component display the list of all available options. It use\n** different form to display a option (see functions below). Each options passed\n** in the optionsDispatcher and is returned in his own div container.\n** Whenever options change, it pop-up a snackbar if the user is not the leader.\n** It use redux to make changes in state.\n*/\n\nfunction OptionsForm(props) {\n\tconst { options, dispatch, room, leader, gameType } = props;\n\tconst refOptions = useRef(options);\n\tconst [openSnack, setOpenSnack] = useState(false);\n\n\t/*\n\t** Toggle the snackbar whenever options change\n\t*/\n\n\tuseEffect(() => {\n\t\tif (options !== refOptions.current && gameType === 'multi' && !leader) {\n\t\t\trefOptions.current = options;\n\t\t\tsetOpenSnack(true);\n\t\t}\n\t}, [options, gameType, leader])\n\n\t/*\n\t** Create and array of entries and values from options then map the array\n\t*/\n\n\tfunction displayOptions() {\n\t\tlet optionsArray = Object.entries(options);\n\t\treturn (\n\t\t\toptionsArray.map((e, idx) =>\n\t\t\t\t<div key={'option-' + idx} className='option-container'>\n\t\t\t\t\t{optionsDispatcher(e[0], e[1], dispatch, room, leader, gameType)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\t}\n\n\t/*\n\t** Simple if/else dispatcher to render options\n\t*/\n\n\tfunction optionsDispatcher(option, value) {\n\t\tif (option === 'ghostMode')\n\t\t\treturn (<CustomSwitcher option={option} value={value} room={room}\n\t\t\t\tleader={leader} dispatch={dispatch} />);\n\t\telse if (option === 'colorMode')\n\t\t\treturn (<ColorSelect option={option} value={value} room={room}\n\t\t\t\tleader={leader} dispatch={dispatch} />);\n\t\telse if (option === 'startingLevel')\n\t\t\treturn (<StartingLevelSlider value={value} dispatch={dispatch}\n\t\t\t\troom={room} leader={leader} />);\n\t\telse if (option === 'dropTimeRef')\n\t\t\treturn (<DropTimeRefSlider value={value} dispatch={dispatch}\n\t\t\t\troom={room} leader={leader} />);\n\t\telse if (option === 'fullSpectrum' && gameType === 'multi')\n\t\t\treturn (<CustomSwitcher option={option} value={value} room={room}\n\t\t\t\tleader={leader} dispatch={dispatch} />);\n\t}\n\n\treturn (\n\t\t<div className='game-options-container'>\n\t\t\t<Typography variant='h4' component='h4'>Options </Typography>\n\t\t\t<Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n\t\t\t{gameType === 'multi' &&\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tOnly the leader can change them before the game starts\n\t\t\t\t</Typography>}\n\t\t\t{displayOptions()}\n\t\t\t<DataSlideSnackbar data=\"The leader changed game options\"\n\t\t\t\topen={openSnack} setOpen={setOpenSnack} />\n\t\t</div>\n\t)\n}\n\n/*\n** Toggle on/off value of ghost mode. If the user is leader it dispatch the new\n** value. Else the switcher is disabled\n*/\nexport function CustomSwitcher({ option, value, room, leader, dispatch }) {\n\tfunction toggleChange() {\n\t\tdispatch(requestChangeOption({ option, value: !value, room }));\n\t}\n\treturn (\n\t\t<FormGroup row>\n\t\t\t<CustomFormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={value}\n\t\t\t\t\t\tdisabled={!leader}\n\t\t\t\t\t\tname={option + '_switch'}\n\t\t\t\t\t\tonChange={toggleChange} />\n\t\t\t\t}\n\t\t\t\tlabel={option}\n\t\t\t\tlabelPlacement=\"start\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n}\n\nexport function ColorSelect({ option, value, dispatch, room, leader }) {\n\n\tfunction toggleChange(event) {\n\t\tdispatch(requestChangeOption({ option, value: event.target.value, room }));\n\t}\n\n\treturn (\n\t\t<CustomFormControl variant='outlined' disabled={!leader}>\n\t\t\t<InputLabel id=\"color-select-label\">Color</InputLabel>\n\t\t\t<Select\n\t\t\t\tnative\n\t\t\t\tlabelId=\"color-select-label\"\n\t\t\t\tid=\"color-select\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={toggleChange}\n\t\t\t\tlabel=\"Color\"\n\t\t\t>\n\t\t\t\t<option value=\"normal\">Normal</option>\n\t\t\t\t<option value=\"random\">Random</option>\n\t\t\t\t<option value=\"red\">Red</option>\n\t\t\t</Select>\n\t\t</CustomFormControl>\n\t);\n}\n\n/*\n**  Toggle starting level value. If the user is leader it dispatch the new\n** value. Else the slider is disabled.\n*/\n\nexport function StartingLevelSlider({ value, dispatch, room, leader }) {\n\tconst [sliderVal, setSliderVal] = useState(value);\n\n\tuseEffect(() => {\n\t\tsetSliderVal(value)\n\t}, [value])\n\n\tconst marks = [\n\t\t{\n\t\t\tvalue: 0,\n\t\t\tlabel: 'Easy',\n\t\t},\n\t\t{\n\t\t\tvalue: 5,\n\t\t\tlabel: 'Normal',\n\t\t},\n\t\t{\n\t\t\tvalue: 10,\n\t\t\tlabel: 'Hard',\n\t\t},\n\t\t{\n\t\t\tvalue: 15,\n\t\t\tlabel: 'Really hard',\n\t\t},\n\t\t{\n\t\t\tvalue: 20,\n\t\t\tlabel: 'Professionnal',\n\t\t},\n\t];\n\n\tfunction toggleValue(e, val) {\n\t\tsetSliderVal(val);\n\t}\n\n\tfunction toggleChange(e, val) {\n\t\tdispatch(requestChangeOption({ option: 'startingLevel', value: val, room }));\n\t}\n\n\treturn (\n\t\t<div style={{ width: '100%', color: 'white' }}>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tStarting Level : {sliderVal}\n\t\t\t</Typography>\n\t\t\t<CustomSlider\n\t\t\t\tdata-testid=\"startingLevelSlider\"\n\t\t\t\tvalue={sliderVal}\n\t\t\t\tdisabled={!leader}\n\t\t\t\tgetAriaValueText={(value) => value}\n\t\t\t\taria-labelledby=\"discrete-slider-custom\"\n\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\tstep={1}\n\t\t\t\tmarks={marks}\n\t\t\t\tmin={0}\n\t\t\t\tmax={20}\n\t\t\t\tonChange={toggleValue}\n\t\t\t\tonChangeCommitted={toggleChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n/*\n**  Toggle droptimeRef value. If the user is leader it dispatch the new\n** value. Else the slider is disabled.\n*/\n\nexport function DropTimeRefSlider({ value, dispatch, room, leader }) {\n\tconst [sliderVal, setSliderVal] = useState(value);\n\n\tuseEffect(() => {\n\t\tsetSliderVal(value)\n\t}, [value])\n\n\tconst marks = [\n\t\t{\n\t\t\tvalue: 400,\n\t\t\tlabel: 'BlackHole',\n\t\t},\n\t\t{\n\t\t\tvalue: 600,\n\t\t\tlabel: 'Hard',\n\t\t},\n\t\t{\n\t\t\tvalue: 800,\n\t\t\tlabel: 'Higher',\n\t\t},\n\t\t{\n\t\t\tvalue: 1000,\n\t\t\tlabel: 'Normal',\n\t\t},\n\t\t{\n\t\t\tvalue: 1200,\n\t\t\tlabel: 'Lower',\n\t\t},\n\t\t{\n\t\t\tvalue: 1400,\n\t\t\tlabel: 'Easy',\n\t\t},\n\t\t{\n\t\t\tvalue: 1600,\n\t\t\tlabel: 'Moon',\n\t\t},\n\t];\n\n\tfunction toggleValue(e, val) {\n\t\tsetSliderVal(val);\n\t}\n\n\tfunction toggleChange(e, val) {\n\t\tdispatch(requestChangeOption({ option: 'dropTimeRef', value: val, room }));\n\t}\n\n\treturn (\n\t\t<div style={{ width: '100%', color: 'white' }}>\n\t\t\t<Typography gutterBottom>\n\t\t\t\tGravity (time in ms) : {sliderVal}\n\t\t\t</Typography>\n\t\t\t<CustomSlider\n\t\t\t\tvalue={sliderVal}\n\t\t\t\tdisabled={!leader}\n\t\t\t\tdata-testid=\"dropTimeRefSlider\"\n\t\t\t\tgetAriaValueText={(value) => value}\n\t\t\t\taria-labelledby=\"discrete-slider-custom\"\n\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\tstep={200}\n\t\t\t\tmarks={marks}\n\t\t\t\tmin={400}\n\t\t\t\tmax={1600}\n\t\t\t\tonChange={toggleValue}\n\t\t\t\tonChangeCommitted={toggleChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst CustomSlider = withStyles({\n\tmarkLabel: {\n\t\tcolor: 'rgba(255,255,255,0.6)',\n\t},\n\tmarkLabelActive: {\n\t\tcolor: 'white'\n\t}\n})(Slider);\n\nconst CustomFormControlLabel = withStyles({\n\troot: {\n\t\t'& .MuiFormControlLabel-label.Mui-disabled': {\n\t\t\tcolor: 'rgba(255,255,255,0.6)',\n\t\t},\n\t}\n})(FormControlLabel);\n\nconst CustomFormControl = withStyles((theme) => ({\n\troot: {\n\t\t'& .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: 'white'\n\t\t},\n\t\t'& .MuiFormLabel-root': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'& .MuiFormLabel-root.Mui-focused': {\n\t\t\tcolor: theme.palette.primary.main\n\t\t},\n\t\t'& .MuiOutlinedInput-root': {\n\t\t\tcolor: theme.palette.secondary.main,\n\t\t\t'&:hover fieldset': {\n\t\t\t\tborderColor: theme.palette.primary.main,\n\t\t\t},\n\t\t},\n\t\t'& .MuiOutlinedInput-root.Mui-disabled': {\n\t\t\tcolor: 'grey',\n\t\t\t'&:hover fieldset': {\n\t\t\t\tborderColor: 'grey',\n\t\t\t},\n\t\t},\n\t\t'& .MuiOutlinedInput-root.Mui-focused': {\n\t\t\tcolor: theme.palette.secondary.main\n\t\t},\n\t\t'& .MuiSvgIcon-root': {\n\t\t\tfill: 'white'\n\t\t},\n\t\t'& .MuiSelect-select.Mui-disabled': {\n\t\t\tcolor: 'grey'\n\t\t}\n\t},\n}))(FormControl);\n\nconst mapStateToProps = (state) => {\n\treturn ({\n\t\toptions: state.game.options,\n\t\troom: state.game.room,\n\t\tgameType: state.game.type,\n\t});\n}\n\nexport default connect(mapStateToProps)(OptionsForm);\n","import React from \"react\";\nimport { Button, Typography, Divider } from \"@material-ui/core\";\nimport { requestLeaveRoom } from \"../actions/socket\";\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n/*\n** Header component of the game page. Displays the room name and players (if\n** multi)\n*/\n\nexport default function GameHeader({ room, players, dispatch, gameType }) {\n\n  function handleBackToHome() {\n    dispatch(requestLeaveRoom());\n  }\n\n  return (\n    <div className='flex-container'>\n      <div className='dark-backGround retro-border room-container'>\n        <Typography variant='h4' component='h4'>Room</Typography>\n        <Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n        <Typography variant='h5' component='h5' style={{ margin: '5px 0' }}>\n          {room}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleBackToHome}\n          size=\"small\"\n          startIcon={<ArrowBack />}\n        >\n          Leave room\n      </Button>\n      </div>\n      { gameType === 'multi' && displayPlayers(players)}\n    </div>\n  );\n}\n\n/*\n** Display all the players of the room and add an icon on the leader\n*/\n\nexport function displayPlayers(players) {\n    return (\n      <div className=' dark-backGround retro-border room-container'>\n        <Typography variant='h4' component='h4'>Players</Typography>\n        <Divider style={{ backgroundColor: 'white', alignSelf: 'normal' }} />\n        <ul className='players-list'>\n          {players.map(e => {\n            if (e.leader)\n              return (\n                <li key={e.name} className='flex-container'>\n                  <PeopleAltIcon />\n                  <Typography variant='body1' component='span'>\n                    {e.name}\n                  </Typography>\n                </li>\n              );\n            return (\n              <li key={e.name}>\n                <Typography variant='body1' component='p'>\n                  {e.name}\n                </Typography>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport GamesIcon from '@material-ui/icons/Games';\nimport { requestStartGame } from \"../actions/socket\";\n\n/*\n** Start button of the game page. Trigger a start of the game when pressed.\n*/\n\nexport default function StartButton({ room, dispatch, setSnackState }) {\n\n  function handleStartGame() {\n    setSnackState(false);\n    dispatch(requestStartGame(room));\n  }\n\n  return (\n    <Button\n      style={{ width: '30%' }}\n      variant=\"contained\"\n      color=\"primary\"\n      startIcon={<GamesIcon />}\n      onClick={handleStartGame}\n    >\n      START\n    </Button>\n  );\n}\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Divider } from \"@material-ui/core\";\nimport { checkHashUrl } from \"../utils/hashUrl\";\nimport Loader from '../components/Loader';\nimport Board from \"../components/Board\";\nimport OptionsForm from \"../components/OptionsForm\";\nimport DataSlideSnackbar from '../components/DataSlideSnackbar';\nimport ChatRoom from \"../components/ChatRoom\";\nimport GameHeader from '../components/GameHeader';\nimport StartButton from '../components/StartButton';\n\nfunction Game(props) {\n  const { gameType, playerName, players, room, board, isLoading,\n    dispatch } = props;\n  const [snackState, setSnackState] = useState({ open: false });\n  const nbPlayers = useRef(players.length);\n  const isLeader = useMemo(() =>\n    findLeader(playerName, players, gameType), [gameType, playerName, players]);\n\n  /*\n  ** Toggle the snackbar if players change\n  */\n\n  useEffect(() => {\n    if (players.length && nbPlayers.current \n        && players.length !== nbPlayers.current) {\n      if (players.length > nbPlayers.current)\n        setSnackState({ open: true, data: \"A new player join the room\" });\n      else\n        setSnackState({ open: true, data: \"A player quit the room\" });\n      nbPlayers.current = players.length;\n    }\n    else if (players.length && !nbPlayers.current)\n      nbPlayers.current = players.length;\n  }, [players])\n\n  /*\n  ** Display the ready button \n  */\n\n  function displayReady() {\n    if ((gameType === 'solo' || nbPlayers.current > 1) && isLeader)\n      return (\n        <StartButton room={room} gameType={gameType} dispatch={dispatch} \n          setSnackState={setSnackState}/>\n      );\n    const waitingText = !isLeader ? 'Please wait before the game start'\n      : ' You must wait at least one more player to start the game';\n    return (\n      <Button variant='contained' color='primary' style={{ color: 'white' }}\n        disabled>\n        {waitingText}\n      </Button>\n    );\n  }\n\n  function displaySnackBar() {\n    return (<DataSlideSnackbar data={snackState.data}\n      open={typeof (snackState) === 'boolean' ? snackState : snackState.open}\n      setOpen={setSnackState} />);\n  }\n\n  if (isLoading)\n    return (<Loader />);\n  else if ((room && !checkHashUrl(room, playerName)) || !room)\n    return (<Redirect to=\"/\" hashType=\"noslash\" />);\n  else if (board) {\n    return (\n      <>\n        <Board isLeader={isLeader} nbPlayers={nbPlayers.current} />\n        {displaySnackBar()}\n      </>\n    );\n  }\n  else\n    return (\n      <div className='game-page'>\n\n        <GameHeader room={room} players={players} dispatch={dispatch}\n          gameType={gameType} />\n\n        <div className='flex-container-center'>\n\n          <div className='left-gamePage-container retro-border dark-backGround'>\n            <OptionsForm leader={isLeader} />\n            <Divider style={{ backgroundColor: 'white', margin: '10px 0' }} />\n            <div className='ready-container'>\n              {displayReady()}\n            </div>\n          </div>\n\n          {gameType === 'multi' &&\n            <div className='right-gamePage-container retro-border dark-backGround'>\n              <ChatRoom />\n            </div>}\n        </div>\n        {displaySnackBar()}\n      </div>\n    );\n}\n\n/*\n** Find the leader if the players array if gameType is not solo. Then return\n** boolean if the actual player is the leader\n*/\nexport function findLeader(playerName, players, gameType) {\n  if (playerName && players.length && gameType)\n    return (gameType === 'solo' ? true\n      : playerName === players.find((e) => e.leader).name)\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    room: state.game.room,\n    playerName: state.game.playerName,\n    isLoading: state.game.isLoading,\n    players: state.game.players,\n    gameType: state.game.type,\n    board: state.board.board,\n  };\n}\n\nexport default connect(mapStatetoProps)(Game);\n","export function checkHashUrl(room, playerName) {\n    if (window.location.hash) {\n        let urlSplit = window.location.hash.split('[');\n        let roomUrl = urlSplit[0].substring(1);\n        let name = urlSplit[1].substring(0, urlSplit[1].length - 1);\n        if (room !== roomUrl || playerName !== name) {\n            return (false);\n        }\n    }\n    return (true);\n}","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nfunction NotFound() {\n    const [redirectUrl, setredirectUrl] = useState(false);\n\n    function backToGoodUrl() {\n        return setredirectUrl(true);\n    }\n\n    function displayPage404() {\n        if (redirectUrl) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <>\n                <h1>GAME OVER</h1>\n                <h2>404- Page not found</h2>\n                <Button onClick={backToGoodUrl} variant='contained' color='primary'\n                    startIcon={<ExitToAppIcon />}>\n                    Back\n                </Button>\n            </>\n            );\n    }\n    return (\n        <div className=\"dark-backGround retro-border formforname-container\">\n            {displayPage404()}\n        </div>\n    );\n}\nexport default NotFound;\n","import React from \"react\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Switch, HashRouter, Route, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { store, persistor } from \"../store/configStore\";\nimport Home from \"./Home\";\nimport Game from \"./Game\";\nimport Loader from '../components/Loader';\nimport NotFound from \"./NotFound\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#d50000',\n      light: '#ff5131',\n      dark: '#9b0000',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#f44336',\n      light: '#ff7961',\n      dark: '#ba000d',\n      contrastText: '#ffffff',\n    },\n  },\n});\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/\">\n                <HashRouter hashType=\"noslash\">\n                  <Switch>\n                    <Route strict exact path=\"/\" component={Home} />\n                    <Route exact path=\"/:room[:playerName]\" component={Game} />\n                    <Route path=\"*\">\n                      <NotFound />\n                    </Route>\n                  </Switch>\n                </HashRouter>\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider >\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport App from \"./pages/App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}